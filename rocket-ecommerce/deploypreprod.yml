    #------------------------------------------------------- Création du namespace pour l'environnement de Preproduction
apiVersion: v1
kind: Namespace
metadata:
  name: preprod

--- #------------------------------------------------------- Création du secret

apiVersion: v1
kind: Secret
metadata:
  name: apikeypreprod
  namespace: preprod
type: Opaque
data:
 STRIPE_SECRET_KEY: c2tfdGVzdF81MVAwbUlOQms1NnRxRVp3YzlrSU9tYkREQUNIQVQ4d1g3T1ZlWnd3SVVkWG1rMndDMXdWSU1qY29vSnRYQWFGSjdOd3RaTlg1bllvMFVpQXQ4MmEwT3FvaTAwS2tiWjNuT3M=
 STRIPE_PUBLISHABLE_KEY: cGtfdGVzdF81MVAwbUlOQms1NnRxRVp3Y3FvMlNCZG9mNGRxZGg2SVdsN1VFODQyT0RtazBNdXFpUXlLdnJpb2NQMjlqc3F1bGRZYXJKbG1iSkpYNUh1YkhrUXdVV3FVRzAwQ1F4TWExUUY=

--- #------------------------------------------------------- Création du configmap

apiVersion: v1
kind: ConfigMap
metadata:
  name: configmappreprod
  namespace: preprod
data:
  SERVER_ADDRESS: "http://localhost:5005/"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_PORT: "587"
  EMAIL_USE_TLS: "True"
  DEBUG: "True"

--- #------------------------------------------------------- Création du déploiement pour déployer les pods

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rocketpreprod-deployment
  namespace: preprod
  labels:
    app: rocketpreprod-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rocketpreprod-app
  template:
    metadata:
      labels:
        app: rocketpreprod-app
    spec:
      containers:
      - name: rocketpreprod-app
        imagePullPolicy: IfNotPresent
        image: rocketslim
        ports:
          - containerPort: 5005
        resources:
          requests:
            memory: 256Mi
            cpu: 512m
          limits:
            memory: 512Mi
            cpu: 1024m
        envFrom:
        - configMapRef:
            name: configmappreprod
        - secretRef:
            name: apikeypreprod

--- #------------------------------------------------------- Création du loadbalancer

apiVersion: v1
kind: Service
metadata:
  name: rocketpreprod-deployment
  namespace: preprod
  labels:
    app: svc-rocketpreprod
spec:
  type: LoadBalancer
  selector:
    app: rocketpreprod-app
  ports:
  - port: 5005
    protocol: TCP
    targetPort: 5005
    
--- #------------------------------------------------------- Création de l'Ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: preprod
spec:
  rules:
  - host: ingress.com
    http:
      paths:
      - path: /lol
        pathType: Prefix
        backend:
          service:
            name: svc-rocketpreprod
            port:
              number: 5005
      - path: /hs
        pathType: Prefix
        backend:
          service:
            name: svc-rocketpreprod
            port:
              number: 5005

--- #------------------------------------------------------- Création de l'autoscaler

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rocketprod-autoscaler
  namespace: preprod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rocketpreprod
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 50
        periodSeconds: 5